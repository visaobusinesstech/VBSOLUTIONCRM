// Script para verificar configura√ß√µes SMTP
// Execute no console do navegador na p√°gina de email

async function checkSmtpConfig() {
  console.log("üîß Verificando configura√ß√µes SMTP...");
  
  try {
    // Verificar se h√° configura√ß√µes salvas
    const { data: settings, error } = await supabase
      .from('configuracoes')
      .select('*')
      .eq('user_id', user.id)
      .single();

    if (error) {
      console.error("‚ùå Erro ao buscar configura√ß√µes:", error);
      return;
    }

    if (!settings) {
      console.warn("‚ö†Ô∏è Nenhuma configura√ß√£o encontrada");
      return;
    }

    console.log("‚úÖ Configura√ß√µes encontradas:");
    console.log("- SMTP Host:", settings.smtp_host || "N√ÉO CONFIGURADO");
    console.log("- SMTP Port:", settings.email_porta || "N√ÉO CONFIGURADO");
    console.log("- SMTP Security:", settings.smtp_seguranca || "N√ÉO CONFIGURADO");
    console.log("- SMTP Username:", settings.email_usuario || "N√ÉO CONFIGURADO");
    console.log("- SMTP Password:", settings.smtp_pass ? "CONFIGURADO" : "N√ÉO CONFIGURADO");
    console.log("- From Name:", settings.smtp_from_name || "N√ÉO CONFIGURADO");

    // Verificar se est√° tudo configurado
    const requiredFields = ['smtp_host', 'email_porta', 'smtp_seguranca', 'email_usuario', 'smtp_pass'];
    const missingFields = requiredFields.filter(field => !settings[field]);
    
    if (missingFields.length > 0) {
      console.warn("‚ö†Ô∏è Campos obrigat√≥rios faltando:", missingFields);
    } else {
      console.log("‚úÖ Todas as configura√ß√µes SMTP est√£o preenchidas");
    }

  } catch (error) {
    console.error("‚ùå Erro ao verificar configura√ß√µes:", error);
  }
}

// Executar verifica√ß√£o
checkSmtpConfig();
